/*! normalize.css v4.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/*
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/*
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * Change font properties to `inherit` in all browsers (opinionated).
 */
button,
input,
select,
textarea {
  font: inherit; }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 * 2. Show the overflow in Edge, Firefox, and IE.
 */
button,
input,
select {
  /* 2 */
  overflow: visible; }

/**
 * Remove the margin in Safari.
 * 1. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  /* 1 */
  margin: 0; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Change the cursor in all browsers (opinionated).
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  cursor: pointer; }

/**
 * Restore the default cursor to disabled elements unset by the previous rule.
 */
[disabled] {
  cursor: default; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
input:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * Correct the odd appearance of search inputs in Chrome and Safari.
 */
[type="search"] {
  -webkit-appearance: textfield; }

/**
 * Remove the inner padding and cancel buttons in Chrome on OS X and
 * Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

@-webkit-keyframes buyUpgrade {
  1% {
    -webkit-transform: translate(0px, 0px);
            transform: translate(0px, 0px);
    opacity: 1; }
  50% {
    -webkit-transform: translate(0px, -20px);
            transform: translate(0px, -20px);
    opacity: 0.2; }
  100% {
    -webkit-transform: translate(0px, 0px);
            transform: translate(0px, 0px);
    opacity: 1; } }

@keyframes buyUpgrade {
  1% {
    -webkit-transform: translate(0px, 0px);
            transform: translate(0px, 0px);
    opacity: 1; }
  50% {
    -webkit-transform: translate(0px, -20px);
            transform: translate(0px, -20px);
    opacity: 0.2; }
  100% {
    -webkit-transform: translate(0px, 0px);
            transform: translate(0px, 0px);
    opacity: 1; } }

@-webkit-keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@-webkit-keyframes fading {
  0% {
    opacity: 1; }
  50% {
    opacity: .5; }
  100% {
    opacity: 1; } }

@keyframes fading {
  0% {
    opacity: 1; }
  50% {
    opacity: .5; }
  100% {
    opacity: 1; } }

#items {
  position: relative;
  display: inline-block;
  margin-top: 20px; }

.faded {
  opacity: 0.4; }

.type {
  width: 150px;
  border: 2px solid #000;
  margin-bottom: 10px; }
  .type .info {
    border-bottom: 2px solid #000;
    padding-left: 4px;
    padding-right: 4px;
    text-align: left; }
  .type .active {
    padding-top: 5px; }
    .type .active img {
      width: 30px;
      height: 30px; }
    .type .active > .item {
      display: inline-block; }
      .type .active > .item:not(:last-of-type) {
        margin-right: 10px; }

.item-menu {
  position: absolute;
  left: 148px;
  border: 1px solid #000;
  width: 270px;
  text-align: left; }
  .item-menu .buy-amount {
    position: absolute;
    right: -1px;
    top: -25px;
    padding: 2px;
    border: 2px solid #000;
    text-align: center; }
    .item-menu .buy-amount input {
      border: none;
      width: 80px; }
      .item-menu .buy-amount input:hover, .item-menu .buy-amount input:active, .item-menu .buy-amount input:focus {
        outline: 0; }
  .item-menu .item {
    border: 1px solid #000; }
    .item-menu .item::after {
      content: " ";
      display: block;
      height: 0;
      clear: both; }
    .item-menu .item .item-info {
      position: relative;
      margin-left: 42px;
      height: 50px;
      padding-top: 1px;
      cursor: pointer; }
    .item-menu .item img {
      padding: 5px;
      padding-top: 10px;
      float: left;
      cursor: -webkit-grab;
      cursor: grab; }
    .item-menu .item p {
      font-size: 0.9em;
      margin-left: 5px;
      vertical-align: 2px; }
    .item-menu .item .cost, .item-menu .item .aps {
      font-size: 0.8em; }
    .item-menu .item .owned {
      position: absolute;
      bottom: 0;
      right: 5px;
      font-weight: bold; }
    .item-menu .item:hover div, .item-menu .item:active div {
      background-color: #ccc; }

.world {
  text-align: center; }
  .world .world-container {
    position: relative;
    display: inline-block; }
  .world .object {
    position: absolute; }

.stats .status {
  font-size: 0.9em;
  vertical-align: 1px; }

.upgrades img {
  width: 30px;
  height: 30px;
  margin-right: 10px; }
  .upgrades img.bought {
    -webkit-animation: buyUpgrade 1.5s 1 forwards ease-out;
            animation: buyUpgrade 1.5s 1 forwards ease-out; }

.options input[type=checkbox] {
  vertical-align: -2px; }
  .options input[type=checkbox]:hover, .options input[type=checkbox]:active, .options input[type=checkbox]:focus {
    outline: 0; }

.options .button {
  margin-right: 8px; }

.class-overlay {
  position: fixed;
  width: 100%;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: white;
  text-align: center; }
  .class-overlay .gender {
    margin-top: 10px; }
    .class-overlay .gender img {
      box-sizing: content-box; }
      .class-overlay .gender img.active {
        outline: 2px solid #000; }
      .class-overlay .gender img:hover, .class-overlay .gender img:active {
        cursor: pointer; }
  .class-overlay .class {
    width: 33%;
    padding: 10px;
    display: inline-block; }
    .class-overlay .class::after {
      content: " ";
      display: block;
      height: 0;
      clear: both; }
    .class-overlay .class img {
      display: block;
      margin: 0 auto 10px;
      width: 60px;
      height: 100px; }
    .class-overlay .class .choose {
      border: 2px solid #000;
      background-color: transparent;
      color: #000;
      padding: 1px 6px;
      font-size: 10pt;
      font-weight: bold;
      margin: 0 auto; }
      .class-overlay .class .choose:hover, .class-overlay .class .choose:active {
        background-color: #aaa;
        cursor: pointer; }
      .class-overlay .class .choose:focus {
        outline: 0; }

.ReactModal__Content {
  position: absolute;
  margin-left: auto;
  margin-right: auto;
  top: 35px;
  bottom: 0;
  left: 0;
  right: 0;
  width: 60vw; }

.body-modal-open {
  overflow-y: hidden; }

.react-tabs [role=tab]:focus {
  box-shadow: none !important;
  border-color: #aaa !important; }

.__react_component_tooltip {
  position: absolute;
  transition: none !important; }
  .__react_component_tooltip.show {
    opacity: 1 !important; }

#loading {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  text-align: center; }
  #loading #loadingSpinner {
    display: inline-block;
    width: 40px;
    height: 40px;
    margin-bottom: 10px;
    border-radius: 50px;
    border: 5px solid #000;
    border-top: 5px solid transparent;
    -webkit-animation: spin 1s infinite linear;
            animation: spin 1s infinite linear; }
  #loading #loadingText {
    -webkit-animation: fading 1s infinite ease-in-out;
            animation: fading 1s infinite ease-in-out; }

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0; }

body, html {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  height: 100%;
  font-family: Arial, Helvetica, sans-serif;
  background-color: #fff;
  color: #000; }

hr {
  border: 1px solid #000;
  margin-bottom: 5px; }

.indent {
  text-indent: 20px; }

#app {
  display: none;
  text-align: center; }

#buttons {
  position: absolute;
  top: 10px;
  right: 0; }
  #buttons .button {
    margin-right: 8px; }

#character img.charging {
  opacity: 0.7; }

#info {
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text; }
  #info #timeouts {
    position: absolute;
    top: 10px;
    left: 10px;
    text-align: left; }

.button {
  border: none;
  background-color: transparent;
  color: #000; }
  .button:hover, .button:active {
    color: #262626;
    text-decoration: underline;
    outline: 0;
    cursor: pointer; }
  .button:focus {
    outline: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9fbm9ybWFsaXplLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvYmFzZS9faHRtbC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Jhc2UvX2JvZHkuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9odG1sNS9fYmxvY2tzLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvaHRtbDUvX2lubGluZS1ibG9ja3Muc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9odG1sNS9fYXVkaW8uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9odG1sNS9fcHJvZ3Jlc3Muc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9odG1sNS9faGlkZGVuLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvbGlua3MvX2ZpeC1iYWNrZ3JvdW5kLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvbGlua3MvX2ZpeC1vdXRsaW5lLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvdGV4dC1sZXZlbC9fYWJici5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL3RleHQtbGV2ZWwvX2ZpeC1ib2xkZXIuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy90ZXh0LWxldmVsL19kZm4uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy90ZXh0LWxldmVsL19oZWFkaW5ncy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL3RleHQtbGV2ZWwvX21hcmsuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy90ZXh0LWxldmVsL19zbWFsbC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL3RleHQtbGV2ZWwvX3N1Yi1hbmQtc3VwLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZW1iZWQvX2ltZy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2VtYmVkL19zdmcuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9ncm91cGluZy9fZml4LW1vbm9zcGFjZS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2dyb3VwaW5nL19maWd1cmUuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9ncm91cGluZy9faHIuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fZml4LWZvbnQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fb3B0Z3JvdXAuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fZml4LW92ZXJmbG93LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZm9ybXMvX21hcmdpbi5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Zvcm1zL19maXgtdGV4dC10cmFuc2Zvcm0uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fY3Vyc29yLnNjc3MiLCJpbmRleC5jc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZm9ybXMvX2J1dHRvbi5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Zvcm1zL19maXgtZm9jdXMtaW5uZXIuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fZmllbGRzZXQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fbGVnZW5kLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZm9ybXMvX3RleHRhcmVhLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbW9kdWxhcml6ZWQtbm9ybWFsaXplLXNjc3MvZm9ybXMvX2NoZWNrYm94LWFuZC1yYWRpby5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL2Zvcm1zL19udW1iZXIuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9tb2R1bGFyaXplZC1ub3JtYWxpemUtc2Nzcy9mb3Jtcy9fc2VhcmNoLnNjc3MiLCJfYW5pbWF0aW9ucy5zY3NzIiwiX2l0ZW1zLnNjc3MiLCJfbWl4aW5zLnNjc3MiLCJfd29ybGQuc2NzcyIsIl9zdGF0cy5zY3NzIiwiX3VwZ3JhZGVzLnNjc3MiLCJfb3B0aW9ucy5zY3NzIiwiX2NsYXNzZXMuc2NzcyIsIl9yZWFjdC5zY3NzIiwiX2xvYWRpbmcu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MUIsV0FBVTtJQUNWLGdCQUFlLEVBQ2Y7RUFaRjtJQWdCRSxXQUFVLEVBQ1YiLCJmaWxlIjoiaW5kZXguY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG5AaW1wb3J0ICdiYXNlL2h0bWwnO1xuQGltcG9ydCAnYmFzZS9ib2R5JztcblxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AaW1wb3J0ICdodG1sNS9ibG9ja3MnO1xuQGltcG9ydCAnaHRtbDUvaW5saW5lLWJsb2Nrcyc7XG5AaW1wb3J0ICdodG1sNS9hdWRpbyc7XG5AaW1wb3J0ICdodG1sNS9wcm9ncmVzcyc7XG5AaW1wb3J0ICdodG1sNS9oaWRkZW4nO1xuXG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AaW1wb3J0ICdsaW5rcy9maXgtYmFja2dyb3VuZCc7XG5AaW1wb3J0ICdsaW5rcy9maXgtb3V0bGluZSc7XG5cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbkBpbXBvcnQgJ3RleHQtbGV2ZWwvYWJicic7XG5AaW1wb3J0ICd0ZXh0LWxldmVsL2ZpeC1ib2xkZXInO1xuQGltcG9ydCAndGV4dC1sZXZlbC9kZm4nO1xuQGltcG9ydCAndGV4dC1sZXZlbC9oZWFkaW5ncyc7XG5AaW1wb3J0ICd0ZXh0LWxldmVsL21hcmsnO1xuQGltcG9ydCAndGV4dC1sZXZlbC9zbWFsbCc7XG5AaW1wb3J0ICd0ZXh0LWxldmVsL3N1Yi1hbmQtc3VwJztcblxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AaW1wb3J0ICdlbWJlZC9pbWcnO1xuQGltcG9ydCAnZW1iZWQvc3ZnJztcblxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5AaW1wb3J0ICdncm91cGluZy9maXgtbW9ub3NwYWNlJztcbkBpbXBvcnQgJ2dyb3VwaW5nL2ZpZ3VyZSc7XG5AaW1wb3J0ICdncm91cGluZy9ocic7XG5cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG5AaW1wb3J0ICdmb3Jtcy9maXgtZm9udCc7XG5AaW1wb3J0ICdmb3Jtcy9vcHRncm91cCc7XG5AaW1wb3J0ICdmb3Jtcy9maXgtb3ZlcmZsb3cnO1xuQGltcG9ydCAnZm9ybXMvbWFyZ2luJztcbkBpbXBvcnQgJ2Zvcm1zL2ZpeC10ZXh0LXRyYW5zZm9ybSc7XG5AaW1wb3J0ICdmb3Jtcy9jdXJzb3InO1xuQGltcG9ydCAnZm9ybXMvYnV0dG9uJztcbkBpbXBvcnQgJ2Zvcm1zL2ZpeC1mb2N1cy1pbm5lcic7XG5AaW1wb3J0ICdmb3Jtcy9maWVsZHNldCc7XG5AaW1wb3J0ICdmb3Jtcy9sZWdlbmQnO1xuQGltcG9ydCAnZm9ybXMvdGV4dGFyZWEnO1xuQGltcG9ydCAnZm9ybXMvY2hlY2tib3gtYW5kLXJhZGlvJztcbkBpbXBvcnQgJ2Zvcm1zL251bWJlcic7XG5AaW1wb3J0ICdmb3Jtcy9zZWFyY2gnO1xuIiwiLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgYW5kIElFIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZSxcbiAqICAgIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbS5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG4iLCIvKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG4iLCIvKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscywgLyogMSAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sIC8qIDIgKi9cbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG4iLCIvKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbiIsIi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cbiIsIi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cbiIsIi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSwgLyogMSAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuIiwiLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7XG59XG4iLCIvKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuIiwiLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cbiIsIi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbiIsIi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuIiwiLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuIiwiLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuIiwiLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuIiwiLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG4iLCIvKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbiIsIi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuIiwiLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cbiIsIi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG4iLCIvKipcbiAqIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xufVxuIiwiLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuIiwiLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsIC8qIDEgKi9cbnNlbGVjdCB7IC8qIDIgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG4iLCIvKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIFNhZmFyaS5cbiAqIDEuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHsgLyogMSAqL1xuICBtYXJnaW46IDA7XG59XG4iLCIvKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG4iLCIvKipcbiAqIENoYW5nZSB0aGUgY3Vyc29yIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGRlZmF1bHQgY3Vyc29yIHRvIGRpc2FibGVkIGVsZW1lbnRzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbltkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2NC4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0IHtcbiAgLyogMiAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIFNhZmFyaS5cbiAqIDEuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGN1cnNvciBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBkZWZhdWx0IGN1cnNvciB0byBkaXNhYmxlZCBlbGVtZW50cyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuW2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcbmlucHV0Oi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2Ugb2Ygc2VhcmNoIGlucHV0cyBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIG9uIE9TIFggYW5kXG4gKiBTYWZhcmkgb24gT1MgWC5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG5Aa2V5ZnJhbWVzIGJ1eVVwZ3JhZGUge1xuICAxJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LCAwcHgpO1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsIC0yMHB4KTtcbiAgICBvcGFjaXR5OiAwLjI7IH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LCAwcHgpO1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5Aa2V5ZnJhbWVzIHNwaW4ge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfSB9XG5cbkBrZXlmcmFtZXMgZmFkaW5nIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAuNTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuI2l0ZW1zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi10b3A6IDIwcHg7IH1cblxuLmZhZGVkIHtcbiAgb3BhY2l0eTogMC40OyB9XG5cbi50eXBlIHtcbiAgd2lkdGg6IDE1MHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCAjMDAwO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG4gIC50eXBlIC5pbmZvIHtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzAwMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDRweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0cHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAudHlwZSAuYWN0aXZlIHtcbiAgICBwYWRkaW5nLXRvcDogNXB4OyB9XG4gICAgLnR5cGUgLmFjdGl2ZSBpbWcge1xuICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICBoZWlnaHQ6IDMwcHg7IH1cbiAgICAudHlwZSAuYWN0aXZlID4gLml0ZW0ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgICAudHlwZSAuYWN0aXZlID4gLml0ZW06bm90KDpsYXN0LW9mLXR5cGUpIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9XG5cbi5pdGVtLW1lbnUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDE0OHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xuICB3aWR0aDogMjcwcHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLml0ZW0tbWVudSAuYnV5LWFtb3VudCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAtMXB4O1xuICAgIHRvcDogLTI1cHg7XG4gICAgcGFkZGluZzogMnB4O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICMwMDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLml0ZW0tbWVudSAuYnV5LWFtb3VudCBpbnB1dCB7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICB3aWR0aDogODBweDsgfVxuICAgICAgLml0ZW0tbWVudSAuYnV5LWFtb3VudCBpbnB1dDpob3ZlciwgLml0ZW0tbWVudSAuYnV5LWFtb3VudCBpbnB1dDphY3RpdmUsIC5pdGVtLW1lbnUgLmJ1eS1hbW91bnQgaW5wdXQ6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiAwOyB9XG4gIC5pdGVtLW1lbnUgLml0ZW0ge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7IH1cbiAgICAuaXRlbS1tZW51IC5pdGVtOjphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuaXRlbS1tZW51IC5pdGVtIC5pdGVtLWluZm8ge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDQycHg7XG4gICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICBwYWRkaW5nLXRvcDogMXB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgLml0ZW0tbWVudSAuaXRlbSBpbWcge1xuICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGN1cnNvcjogZ3JhYjsgfVxuICAgIC5pdGVtLW1lbnUgLml0ZW0gcCB7XG4gICAgICBmb250LXNpemU6IDAuOWVtO1xuICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiAycHg7IH1cbiAgICAuaXRlbS1tZW51IC5pdGVtIC5jb3N0LCAuaXRlbS1tZW51IC5pdGVtIC5hcHMge1xuICAgICAgZm9udC1zaXplOiAwLjhlbTsgfVxuICAgIC5pdGVtLW1lbnUgLml0ZW0gLm93bmVkIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIHJpZ2h0OiA1cHg7XG4gICAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICAgIC5pdGVtLW1lbnUgLml0ZW06aG92ZXIgZGl2LCAuaXRlbS1tZW51IC5pdGVtOmFjdGl2ZSBkaXYge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYzsgfVxuXG4ud29ybGQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLndvcmxkIC53b3JsZC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgLndvcmxkIC5vYmplY3Qge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgfVxuXG4uc3RhdHMgLnN0YXR1cyB7XG4gIGZvbnQtc2l6ZTogMC45ZW07XG4gIHZlcnRpY2FsLWFsaWduOiAxcHg7IH1cblxuLnVwZ3JhZGVzIGltZyB7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDsgfVxuICAudXBncmFkZXMgaW1nLmJvdWdodCB7XG4gICAgYW5pbWF0aW9uOiBidXlVcGdyYWRlIDEuNXMgMSBmb3J3YXJkcyBlYXNlLW91dDsgfVxuXG4ub3B0aW9ucyBpbnB1dFt0eXBlPWNoZWNrYm94XSB7XG4gIHZlcnRpY2FsLWFsaWduOiAtMnB4OyB9XG4gIC5vcHRpb25zIGlucHV0W3R5cGU9Y2hlY2tib3hdOmhvdmVyLCAub3B0aW9ucyBpbnB1dFt0eXBlPWNoZWNrYm94XTphY3RpdmUsIC5vcHRpb25zIGlucHV0W3R5cGU9Y2hlY2tib3hdOmZvY3VzIHtcbiAgICBvdXRsaW5lOiAwOyB9XG5cbi5vcHRpb25zIC5idXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDhweDsgfVxuXG4uY2xhc3Mtb3ZlcmxheSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuY2xhc3Mtb3ZlcmxheSAuZ2VuZGVyIHtcbiAgICBtYXJnaW4tdG9wOiAxMHB4OyB9XG4gICAgLmNsYXNzLW92ZXJsYXkgLmdlbmRlciBpbWcge1xuICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cbiAgICAgIC5jbGFzcy1vdmVybGF5IC5nZW5kZXIgaW1nLmFjdGl2ZSB7XG4gICAgICAgIG91dGxpbmU6IDJweCBzb2xpZCAjMDAwOyB9XG4gICAgICAuY2xhc3Mtb3ZlcmxheSAuZ2VuZGVyIGltZzpob3ZlciwgLmNsYXNzLW92ZXJsYXkgLmdlbmRlciBpbWc6YWN0aXZlIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5jbGFzcy1vdmVybGF5IC5jbGFzcyB7XG4gICAgd2lkdGg6IDMzJTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5jbGFzcy1vdmVybGF5IC5jbGFzczo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGhlaWdodDogMDtcbiAgICAgIGNsZWFyOiBib3RoOyB9XG4gICAgLmNsYXNzLW92ZXJsYXkgLmNsYXNzIGltZyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbjogMCBhdXRvIDEwcHg7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIGhlaWdodDogMTAwcHg7IH1cbiAgICAuY2xhc3Mtb3ZlcmxheSAuY2xhc3MgLmNob29zZSB7XG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAjMDAwO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBjb2xvcjogIzAwMDtcbiAgICAgIHBhZGRpbmc6IDFweCA2cHg7XG4gICAgICBmb250LXNpemU6IDEwcHQ7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gICAgICAuY2xhc3Mtb3ZlcmxheSAuY2xhc3MgLmNob29zZTpob3ZlciwgLmNsYXNzLW92ZXJsYXkgLmNsYXNzIC5jaG9vc2U6YWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICAuY2xhc3Mtb3ZlcmxheSAuY2xhc3MgLmNob29zZTpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IDA7IH1cblxuLlJlYWN0TW9kYWxfX0NvbnRlbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHRvcDogMzVweDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgd2lkdGg6IDYwdnc7IH1cblxuLmJvZHktbW9kYWwtb3BlbiB7XG4gIG92ZXJmbG93LXk6IGhpZGRlbjsgfVxuXG4ucmVhY3QtdGFicyBbcm9sZT10YWJdOmZvY3VzIHtcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBib3JkZXItY29sb3I6ICNhYWEgIWltcG9ydGFudDsgfVxuXG4uX19yZWFjdF9jb21wb25lbnRfdG9vbHRpcCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdHJhbnNpdGlvbjogbm9uZSAhaW1wb3J0YW50OyB9XG4gIC5fX3JlYWN0X2NvbXBvbmVudF90b29sdGlwLnNob3cge1xuICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDsgfVxuXG4jbG9hZGluZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICNsb2FkaW5nICNsb2FkaW5nU3Bpbm5lciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgYm9yZGVyOiA1cHggc29saWQgIzAwMDtcbiAgICBib3JkZXItdG9wOiA1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYW5pbWF0aW9uOiBzcGluIDFzIGluZmluaXRlIGxpbmVhcjsgfVxuICAjbG9hZGluZyAjbG9hZGluZ1RleHQge1xuICAgIGFuaW1hdGlvbjogZmFkaW5nIDFzIGluZmluaXRlIGVhc2UtaW4tb3V0OyB9XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuYm9keSwgaHRtbCB7XG4gIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBjb2xvcjogIzAwMDsgfVxuXG5ociB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XG4gIG1hcmdpbi1ib3R0b206IDVweDsgfVxuXG4uaW5kZW50IHtcbiAgdGV4dC1pbmRlbnQ6IDIwcHg7IH1cblxuI2FwcCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4jYnV0dG9ucyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMHB4O1xuICByaWdodDogMDsgfVxuICAjYnV0dG9ucyAuYnV0dG9uIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDsgfVxuXG4jY2hhcmFjdGVyIGltZy5jaGFyZ2luZyB7XG4gIG9wYWNpdHk6IDAuNzsgfVxuXG4jaW5mbyB7XG4gIHVzZXItc2VsZWN0OiB0ZXh0OyB9XG4gICNpbmZvICN0aW1lb3V0cyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTBweDtcbiAgICBsZWZ0OiAxMHB4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuLmJ1dHRvbiB7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiAjMDAwOyB9XG4gIC5idXR0b246aG92ZXIsIC5idXR0b246YWN0aXZlIHtcbiAgICBjb2xvcjogIzI2MjYyNjtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICBvdXRsaW5lOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAuYnV0dG9uOmZvY3VzIHtcbiAgICBvdXRsaW5lOiAwOyB9XG4iLCIvKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbn1cbiIsIi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuaW5wdXQ6LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG4iLCIvKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuIiwiLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG4iLCIvKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cbiIsIi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuIiwiLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cbiIsIi8qKlxuICogQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2Ugb2Ygc2VhcmNoIGlucHV0cyBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIG9uIE9TIFggYW5kXG4gKiBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuIiwiQGtleWZyYW1lcyBidXlVcGdyYWRlXG57XG5cdDElIHt0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsMHB4KTsgb3BhY2l0eTogMTt9XG5cdDUwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LC0yMHB4KTsgb3BhY2l0eTogMC4yO31cblx0MTAwJSB7dHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LC0wcHgpOyBvcGFjaXR5OiAxO31cbn1cblxuLy8gc3BpbnMgYW4gb2JqZWN0IDM2MCBkZWdyZWVzXG5Aa2V5ZnJhbWVzIHNwaW5cbntcblx0ZnJvbVxuXHR7XG5cdFx0dHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG5cdH1cblxuXHR0b1xuXHR7XG5cdFx0dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcblx0fVxufVxuXG4vLyBmYWRlcyBhbiBvYmplY3RzIG9wYWNpdHkgYmFjayBhbmQgZm9ydGhcbkBrZXlmcmFtZXMgZmFkaW5nXG57XG5cdDAlXG5cdHtcblx0XHRvcGFjaXR5OiAxO1xuXHR9XG5cblx0NTAlXG5cdHtcblx0XHRvcGFjaXR5OiAuNTtcblx0fVxuXG5cdDEwMCVcblx0e1xuXHRcdG9wYWNpdHk6IDE7XG5cdH1cbn1cbiIsIi8vIFZhcmlhYmxlc1xuJGl0ZW0tYm9yZGVyLWNvbG9yOiAjMDAwO1xuXG4jaXRlbXNcbntcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbi5mYWRlZFxue1xuXHRvcGFjaXR5OiAwLjQ7XG59XG5cbi50eXBlXG57XG5cdHdpZHRoOiAxNTBweDtcblx0Ym9yZGVyOiAycHggc29saWQgJGl0ZW0tYm9yZGVyLWNvbG9yO1xuXHRtYXJnaW4tYm90dG9tOiAxMHB4O1xuXG5cdC5pbmZvXG5cdHtcblx0XHRib3JkZXItYm90dG9tOiAycHggc29saWQgJGl0ZW0tYm9yZGVyLWNvbG9yO1xuXHRcdHBhZGRpbmctbGVmdDogNHB4O1xuXHRcdHBhZGRpbmctcmlnaHQ6IDRweDtcblx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHR9XG5cblx0LmFjdGl2ZVxuXHR7XG5cdFx0cGFkZGluZy10b3A6IDVweDtcblxuXHRcdGltZ1xuXHRcdHtcblx0XHRcdHdpZHRoOiAzMHB4O1xuXHRcdFx0aGVpZ2h0OiAzMHB4O1xuXHRcdH1cblxuXHRcdD4gLml0ZW1cblx0XHR7XG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cblx0XHRcdCY6bm90KDpsYXN0LW9mLXR5cGUpXG5cdFx0XHR7XG5cdFx0XHRcdG1hcmdpbi1yaWdodDogMTBweDtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxuLml0ZW0tbWVudVxue1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdGxlZnQ6IDE0OHB4O1xuXHRib3JkZXI6IDFweCBzb2xpZCAkaXRlbS1ib3JkZXItY29sb3I7XG5cdHdpZHRoOiAyNzBweDtcblx0dGV4dC1hbGlnbjogbGVmdDtcblxuXHQuYnV5LWFtb3VudFxuXHR7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdHJpZ2h0OiAtMXB4O1xuXHRcdHRvcDogLTI1cHg7XG5cdFx0cGFkZGluZzogMnB4O1xuXHRcdGJvcmRlcjogMnB4IHNvbGlkICRpdGVtLWJvcmRlci1jb2xvcjtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cblx0XHRpbnB1dFxuXHRcdHtcblx0XHRcdGJvcmRlcjogbm9uZTtcblx0XHRcdHdpZHRoOiA4MHB4O1xuXG5cdFx0XHQmOmhvdmVyLCAmOmFjdGl2ZSwgJjpmb2N1c1xuXHRcdFx0e1xuXHRcdFx0XHRvdXRsaW5lOiAwO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC5pdGVtXG5cdHtcblx0XHRib3JkZXI6IDFweCBzb2xpZCAkaXRlbS1ib3JkZXItY29sb3I7XG5cdFx0QGluY2x1ZGUgY2xlYXJmaXgoKTtcblxuXHRcdC5pdGVtLWluZm9cblx0XHR7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0XHRtYXJnaW4tbGVmdDogNDJweDtcblx0XHRcdGhlaWdodDogNTBweDtcblx0XHRcdHBhZGRpbmctdG9wOiAxcHg7XG5cdFx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0fVxuXG5cdFx0aW1nXG5cdFx0e1xuXHRcdFx0cGFkZGluZzogNXB4O1xuXHRcdFx0cGFkZGluZy10b3A6IDEwcHg7XG5cdFx0XHRmbG9hdDogbGVmdDtcblx0XHRcdGN1cnNvcjogZ3JhYjtcblx0XHR9XG5cblx0XHRwXG5cdFx0e1xuXHRcdFx0Zm9udC1zaXplOiAwLjllbTtcblx0XHRcdG1hcmdpbi1sZWZ0OiA1cHg7XG5cdFx0XHR2ZXJ0aWNhbC1hbGlnbjogMnB4O1xuXHRcdH1cblxuXHRcdC5jb3N0LCAuYXBzXG5cdFx0e1xuXHRcdFx0Zm9udC1zaXplOiAwLjhlbTtcblx0XHR9XG5cblx0XHQub3duZWRcblx0XHR7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRib3R0b206IDA7XG5cdFx0XHRyaWdodDogNXB4O1xuXHRcdFx0Zm9udC13ZWlnaHQ6IGJvbGQ7XG5cdFx0fVxuXG5cdFx0Jjpob3ZlciwgJjphY3RpdmVcblx0XHR7XG5cdFx0XHRkaXZcblx0XHRcdHtcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogI2NjYztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cbiIsIkBtaXhpbiBjbGVhcmZpeCgpXG57XG5cdCY6OmFmdGVyXG5cdHtcblx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRoZWlnaHQ6IDA7XG5cdFx0Y2xlYXI6IGJvdGg7XG5cdH1cbn0iLCIud29ybGRcbntcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXG5cdC53b3JsZC1jb250YWluZXJcblx0e1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdH1cblxuXHQub2JqZWN0XG5cdHtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdH1cbn1cbiIsIi5zdGF0c1xue1xuXHQuc3RhdHVzXG5cdHtcblx0XHRmb250LXNpemU6IDAuOWVtO1xuXHRcdHZlcnRpY2FsLWFsaWduOiAxcHg7XG5cdH1cbn1cbiIsIi51cGdyYWRlc1xue1xuXHRpbWdcblx0e1xuXHRcdHdpZHRoOiAzMHB4O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRtYXJnaW4tcmlnaHQ6IDEwcHg7XG5cblx0XHQmLmJvdWdodFxuXHRcdHtcblx0XHRcdGFuaW1hdGlvbjogYnV5VXBncmFkZSAxLjVzIDEgZm9yd2FyZHMgZWFzZS1vdXQ7XG5cdFx0fVxuXHR9XG59XG4iLCIub3B0aW9uc1xue1xuXHRpbnB1dFt0eXBlPWNoZWNrYm94XVxuXHR7XG5cdFx0dmVydGljYWwtYWxpZ246IC0ycHg7XG5cblx0XHQmOmhvdmVyLCAmOmFjdGl2ZSwgJjpmb2N1c1xuXHRcdHtcblx0XHRcdG91dGxpbmU6IDA7XG5cdFx0fVxuXHR9XG5cblxuXHQuYnV0dG9uXG5cdHtcblx0XHRtYXJnaW4tcmlnaHQ6IDhweDtcblx0fVxufVxuIiwiLy8gVmFyaWFibGVzXG4kY2xhc3MtYm9yZGVyLWNvbG9yOiAjMDAwO1xuJGNsYXNzLWhvdmVyLWNvbG9yOiAjYWFhO1xuXG4uY2xhc3Mtb3ZlcmxheVxue1xuXHRwb3NpdGlvbjogZml4ZWQ7XG5cdHdpZHRoOiAxMDAlO1xuXHR0b3A6IDA7XG5cdGJvdHRvbTogMDtcblx0bGVmdDogMDtcblx0cmlnaHQ6IDA7XG5cblx0YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblxuXHQuZ2VuZGVyXG5cdHtcblx0XHRtYXJnaW4tdG9wOiAxMHB4O1xuXG5cdFx0aW1nXG5cdFx0e1xuXHRcdFx0Ym94LXNpemluZzogY29udGVudC1ib3g7XG5cblx0XHRcdCYuYWN0aXZlXG5cdFx0XHR7XG5cdFx0XHRcdG91dGxpbmU6IDJweCBzb2xpZCAkY2xhc3MtYm9yZGVyLWNvbG9yO1xuXHRcdFx0fVxuXG5cdFx0XHQmOmhvdmVyLCAmOmFjdGl2ZVxuXHRcdFx0e1xuXHRcdFx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0LmNsYXNzXG5cdHtcblx0XHR3aWR0aDogMzMlO1xuXHRcdHBhZGRpbmc6IDEwcHg7XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG5cdFx0QGluY2x1ZGUgY2xlYXJmaXgoKTtcblxuXHRcdGltZ1xuXHRcdHtcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0bWFyZ2luOiAwIGF1dG8gMTBweDtcblx0XHRcdHdpZHRoOiA2MHB4O1xuXHRcdFx0aGVpZ2h0OiAxMDBweDtcblx0XHR9XG5cblx0XHQuY2hvb3NlXG5cdFx0e1xuXHRcdFx0Ym9yZGVyOiAycHggc29saWQgJGNsYXNzLWJvcmRlci1jb2xvcjtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRcdFx0Y29sb3I6ICRjbGFzcy1ib3JkZXItY29sb3I7XG5cdFx0XHRwYWRkaW5nOiAxcHggNnB4O1xuXHRcdFx0Zm9udC1zaXplOiAxMHB0O1xuXHRcdFx0Zm9udC13ZWlnaHQ6IGJvbGQ7XG5cdFx0XHRtYXJnaW46IDAgYXV0bztcblxuXHRcdFx0Jjpob3ZlciwgJjphY3RpdmVcblx0XHRcdHtcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGNsYXNzLWhvdmVyLWNvbG9yO1xuXHRcdFx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0XHR9XG5cblx0XHRcdCY6Zm9jdXNcblx0XHRcdHtcblx0XHRcdFx0b3V0bGluZTogMDtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cbiIsIi5SZWFjdE1vZGFsX19Db250ZW50XG57XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0bWFyZ2luLWxlZnQ6IGF1dG87XG5cdG1hcmdpbi1yaWdodDogYXV0bztcblx0dG9wOiAzNXB4O1xuXHRib3R0b206IDA7XG5cdGxlZnQ6IDA7XG5cdHJpZ2h0OiAwO1xuXHR3aWR0aDogNjB2dztcbn1cblxuLmJvZHktbW9kYWwtb3Blblxue1xuXHRvdmVyZmxvdy15OiBoaWRkZW47XG59XG5cbi5yZWFjdC10YWJzIFtyb2xlPXRhYl06Zm9jdXNcbntcblx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuXHRib3JkZXItY29sb3I6ICNhYWEgIWltcG9ydGFudDtcbn1cblxuLl9fcmVhY3RfY29tcG9uZW50X3Rvb2x0aXBcbntcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0cmFuc2l0aW9uOiBub25lICFpbXBvcnRhbnQ7XG5cblx0Ji5zaG93XG5cdHtcblx0XHRvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG5cdH1cbn1cbiIsIi8vIFZhcmlhYmxlc1xuJGxvYWRpbmctc3Bpbm5lci1jb2xvcjogIzAwMDtcblxuI2xvYWRpbmdcbntcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR0b3A6IDUwJTtcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cblx0I2xvYWRpbmdTcGlubmVyXG5cdHtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0d2lkdGg6IDQwcHg7XG5cdFx0aGVpZ2h0OiA0MHB4O1xuXHRcdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cblx0XHRib3JkZXItcmFkaXVzOiA1MHB4O1xuXHRcdGJvcmRlcjogNXB4IHNvbGlkICRsb2FkaW5nLXNwaW5uZXItY29sb3I7XG5cdFx0Ym9yZGVyLXRvcDogNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuXHRcdGFuaW1hdGlvbjogc3BpbiAxcyBpbmZpbml0ZSBsaW5lYXI7XG5cdH1cblxuXHQjbG9hZGluZ1RleHRcblx0e1xuXHRcdGFuaW1hdGlvbjogZmFkaW5nIDFzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuXHR9XG59XG4iLCJAaW1wb3J0IFwiLi4vLi4vbm9kZV9tb2R1bGVzL21vZHVsYXJpemVkLW5vcm1hbGl6ZS1zY3NzL25vcm1hbGl6ZVwiO1xuQGltcG9ydCBcImFuaW1hdGlvbnNcIjtcbkBpbXBvcnQgXCJtaXhpbnNcIjtcbkBpbXBvcnQgXCJpdGVtc1wiO1xuQGltcG9ydCBcIndvcmxkXCI7XG5AaW1wb3J0IFwic3RhdHNcIjtcbkBpbXBvcnQgXCJ1cGdyYWRlc1wiO1xuQGltcG9ydCBcIm9wdGlvbnNcIjtcbkBpbXBvcnQgXCJjbGFzc2VzXCI7XG5AaW1wb3J0IFwicmVhY3RcIjtcbkBpbXBvcnQgXCJsb2FkaW5nXCI7XG5cbi8vIFZhcmlhYmxlc1xuJGJnLWNvbG9yOiAjZmZmO1xuJHRleHQtY29sb3I6ICMwMDA7XG4kaHItY29sb3I6ICMwMDA7XG5cbi8vIEJ1dHRvbnNcbiRidXR0b24tdGV4dC1jb2xvcjogJHRleHQtY29sb3I7XG4kYnV0dG9uLWhvdmVyLXRleHQtY29sb3I6IGxpZ2h0ZW4oJGJ1dHRvbi10ZXh0LWNvbG9yLCAxNSUpO1xuXG4qXG57XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcbn1cblxuYm9keSwgaHRtbFxue1xuXHR0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcblx0aGVpZ2h0OiAxMDAlO1xuXHRmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcblx0YmFja2dyb3VuZC1jb2xvcjogJGJnLWNvbG9yO1xuXHRjb2xvcjogJHRleHQtY29sb3I7XG59XG5cbmhyXG57XG5cdGJvcmRlcjogMXB4IHNvbGlkICRoci1jb2xvcjtcblx0bWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4uaW5kZW50XG57XG5cdHRleHQtaW5kZW50OiAyMHB4O1xufVxuXG4jYXBwXG57XG5cdGRpc3BsYXk6IG5vbmU7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuI2J1dHRvbnNcbntcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDEwcHg7XG5cdHJpZ2h0OiAwO1xuXG5cdC5idXR0b24geyBtYXJnaW4tcmlnaHQ6IDhweDsgfVxufVxuXG4jY2hhcmFjdGVyXG57XG5cdGltZy5jaGFyZ2luZ1xuXHR7XG5cdFx0b3BhY2l0eTogMC43O1xuXHR9XG59XG5cbiNpbmZvXG57XG5cdHVzZXItc2VsZWN0OiB0ZXh0O1xuXG5cdCN0aW1lb3V0c1xuXHR7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdHRvcDogMTBweDtcblx0XHRsZWZ0OiAxMHB4O1xuXHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdH1cbn1cblxuLmJ1dHRvblxue1xuXHRib3JkZXI6IG5vbmU7XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRjb2xvcjogJGJ1dHRvbi10ZXh0LWNvbG9yO1xuXG5cdCY6aG92ZXIsICY6YWN0aXZlXG5cdHtcblx0XHRjb2xvcjogJGJ1dHRvbi1ob3Zlci10ZXh0LWNvbG9yO1xuXHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuXHRcdG91dGxpbmU6IDA7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHR9XG5cblx0Jjpmb2N1c1xuXHR7XG5cdFx0b3V0bGluZTogMDtcblx0fVxufVxuXG4iXX0= */
